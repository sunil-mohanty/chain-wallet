import 'package:flutter/material.dart';
import '../chain-work/api_service.dart';
import 'package:getwidget/getwidget.dart';
import 'package:google_map_flutter_works/components/CircularButton.dart';
import 'package:google_map_flutter_works/finwallet/Transaction.dart';
import 'package:google_map_flutter_works/signin.dart';
import 'package:google_map_flutter_works/market.dart';
import 'package:google_map_flutter_works/finwallet/home-page.dart';
import 'package:google_map_flutter_works/BottomNavigationBarScreen.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'package:google_map_flutter_works/components/theme.dart';
import 'package:google_fonts/google_fonts.dart';

class Transfer extends StatefulWidget {
  final Map<String, dynamic>? arguments;

  Transfer({Key? key, this.arguments}) : super(key: key);

  @override
  _TransferState createState() => _TransferState(this.arguments);
}

class _TransferState extends State<Transfer> {
  final Map<String, dynamic>? arguments;
  final GlobalKey<ScaffoldState> scaffoldKey = GlobalKey<ScaffoldState>();

  _TransferState(this.arguments, {Key? key}) : super();
  String selectedCurrency = 'Magnet';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      key: scaffoldKey,
      body: Container(
        // ignore: prefer_const_constructors
        width: double.infinity,
        decoration: BoxDecoration(
          // ignore: prefer_const_constructors
          gradient: LinearGradient(
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            colors: [
              Color.fromARGB(255, 13, 19, 133),
              Color.fromARGB(255, 87, 91, 35),
            ], // Adjust colors as needed
          ),
        ),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            SizedBox(height: 30.0), // Add space here

            Padding(
              padding: const EdgeInsets.all(8.0),
              child: IconButton(
                icon: Icon(Icons.arrow_back, color: Colors.white),
                onPressed: () {
                  Navigator.of(context).pop();
                },
              ),
            ),
            SizedBox(height: 10.0), // Adjust the space as needed
            Padding(
              padding: EdgeInsetsDirectional.fromSTEB(16, 16, 16, 16),
              child: Column(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.center,
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Padding(
                    padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
                    child: Text(
                      AppLocalizations.of(context)?.myBank ?? 'Choose Currency',
                      textAlign: TextAlign.center,
                      style: GoogleFonts.getFont(
                        'Lexend Deca',
                        color: ChainWorkTheme.of(context).primaryText,
                        fontSize: 18,
                      ),
                    ),
                  ),
                ],
              ),
            ),
            SizedBox(height: 16.0),
            Container(
              height: 100.0,
              padding: EdgeInsetsDirectional.fromSTEB(0, 4, 0, 0),
              child: ListView(
                scrollDirection: Axis.horizontal,
                children: [
                  CurrencyBox('Magnet'),
                  CurrencyBox('Solana'),
                  CurrencyBox('Dogecoin'),
                  // Add more currencies as needed
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget CurrencyBox(String currency) {
    return GestureDetector(
      onTap: () {
        setState(() {
          selectedCurrency = currency;
        });
      },
      child: Container(
        margin: EdgeInsets.only(right: 16.0),
        padding: EdgeInsets.all(8.0),
        decoration: BoxDecoration(
          color: selectedCurrency == currency
              ? Color.fromARGB(
                  255, 72, 83, 92) // Change the color for the selected currency
              : Colors.transparent, // Transparent background
          borderRadius: BorderRadius.circular(8.0),
          border: Border.all(
            color: Colors.white, // Change the border color
            width: 1.0,
          ),
        ),
        child: Center(
          child: Text(
            currency,
            style: TextStyle(
              color: selectedCurrency == currency
                  ? Colors
                      .white // Change the text color for the selected currency
                  : Color.fromARGB(255, 238, 235, 235),
            ),
          ),
        ),
      ),
    );
  }
}

void showLogoutDialog(BuildContext context) {
  showDialog(
    context: context,
    builder: (BuildContext context) {
      return AlertDialog(
        title: Text("Logout"),
        content: Text("Are you sure you want to log out?"),
        actions: [
          TextButton(
            onPressed: () {
              // Close the dialog
              Navigator.of(context).pop();
            },
            child: Text("Cancel"),
          ),
          TextButton(
            onPressed: () {
              // Perform logout logic here
              // For example, navigate to the login screen
              Navigator.of(context).pop(); // Close the dialog
              Navigator.push(
                  //context, MaterialPageRoute(builder: (context) => const MapApp())
                  context,
                  MaterialPageRoute(builder: (context) => Signin()));
            },
            child: Text("Logout"),
          ),
        ],
      );
    },
  );
}
